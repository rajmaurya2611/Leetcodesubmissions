// Memoization

class Solution {
    public int cal(int n, int dp[]) {
        if(n==1||n==2){
            return n;
        }
        if(dp[n]!=0){
            return dp[n];
        }
        dp[n]=cal(n-1,dp)+cal(n-2,dp);
        return dp[n];
    }
    public int climbStairs(int n){
        int dp[]=new int[n+1];
        return (cal(n, dp));
    }
}

// Tabulation

class Solution {
    public int climbStairs(int n) {
        int dp[]=new int[n+1];
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;i++){
        dp[i]=dp[i-1]+dp[i-2];
        }
        return (dp[n]);
    }
}
